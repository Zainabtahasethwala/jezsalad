//map-variables
$breakpoints: (
    xxl:1800px,
    xl: 1199px,
    large: 992px,
    medium:768px,
    small: 480px,
    null:480px,
);
$h1-font-sizes: (
    xxl:(72px,93px),
    xl: (58px,85px),
    large: (37px,50px),
    medium: (42px,60px),
    small: (40px,58px),
    null:(37px,55px),
);
//map-varaiable for P font size
$p-font-size: (
  xxl: 20px,
  xl: 19px,
  large: 17px,
  medium: 16px,
  small: 15px,
  null: 14px,
);

//case 1: mixin for Font size P
// @mixin font-size($fs-map) {
//   @each $fs-breakpoint, $fs-font-size in $fs-map {
//     @if $fs-breakpoint == null {
//       font-size: $fs-font-size;
//     } @else {
//       @media (max-width: $fs-breakpoint) {
//         font-size: $fs-font-size;
//       }
//     }
//   }
// }

//case2: mixin for h1,p with every alernative breakpoint
// @mixin responsive-font-size($fs-map, $fs-breakpoints: $breakpoints) {
//     @each $fs-breakpoint, $fs-font-size in $fs-map{
//         @if $fs-breakpoint == null{
//             font-size: $fs-font-size;
//         }
//         @else{
//             @if map-has-key($fs-breakpoints, $fs-breakpoint){
//                 $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
//             }
//             @media (max-width:$fs-breakpoint) {
//                 font-size: $fs-font-size;
//             }
//         }
//     }
// }

//case 3: font-size with line height 

// first let create utility function for mixin,font-size:
@mixin typography($fs-font-size){
    @if type-of($fs-font-size) == "list"{
        font-size: nth($fs-font-size, 1);
        @if(length($fs-font-size)> 1){
            line-height: nth($fs-font-size, 2);
        }
    }
    @else{
        font-size: $fs-font-size;
    }
}
//lets create mixin for font size with line-height and breakpoints
@mixin font-size($fs-map, $fs-breakpoints: $breakpoints){
    @each $fs-breakpoint, $fs-font-size in $fs-map{
        @if $fs-breakpoint == null{
            @include typography($fs-font-size);
        }
        @else{
            @if map-has-key($fs-breakpoints, $fs-breakpoint ){
                $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
            }
        }
        @media (max-width:$fs-breakpoint) {
            @include typography($fs-font-size);
        }
    }
}
